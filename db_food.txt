USE db_food;

-- tạo bảng food_type
CREATE TABLE food_type(
	type_id INT PRIMARY KEY AUTO_INCREMENT,
	type_name VARCHAR (255)
);

INSERT INTO food_type (type_name) VALUES
('Đồ nước'),
('Đồ ăn nhanh'),
('Cơm'),
('Nước uống');

-- tạo bảng users
CREATE TABLE users(
	user_id INT PRIMARY KEY AUTO_INCREMENT,
	full_name VARCHAR (255),
	email VARCHAR (255),
	password VARCHAR (255)
);

INSERT INTO users (full_name, email, password) VALUES
('Nguyễn Văn A', 'nguyenvana@example.com', 'password123'),
('Trần Thị B', 'tranthib@example.com', 'securepassword1'),
('Lê Văn C', 'levanc@example.com', 'mypassword2023'),
('Phạm Thị D', 'phamthid@example.com', 'strongpass#456'),
('Hoàng Văn E', 'hoangvane@example.com', 'userpass789'),
('Ngọc Anh', 'ngocanh@example.com', 'mysecretpass'),
('Minh Anh', 'minhanh@example.com', 'anotherpass'),
('Hà Đức', 'haduc@example.com', 'password2023'),
('Trần Văn F', 'tranvanf@example.com', 'newpassword123'),
('Nguyễn Thị G', 'nguyenthig@example.com', 'securepass567');

-- tạo bảng restaurant
CREATE TABLE restaurant(
	res_id INT PRIMARY KEY AUTO_INCREMENT,
	res_name VARCHAR (255),
	image VARCHAR (255),
	description VARCHAR (255)
);

INSERT INTO restaurant (res_name, image, description) VALUES
('Nhà hàng ABC', 'abc-restaurant.jpg', 'Nhà hàng phục vụ các món ăn ngon'),
('Nhà hàng XYZ', 'xyz-restaurant.jpg', 'Nhà hàng với không gian thoải mái'),
('Nhà hàng 123', '123-restaurant.jpg', 'Nhà hàng với phong cách hiện đại'),
('Nhà hàng MNP', 'mnp-restaurant.jpg', 'Nhà hàng đặc biệt với món ăn độc đáo'),
('Nhà hàng QRS', 'qrs-restaurant.jpg', 'Nhà hàng sang trọng với dịch vụ tốt');

-- tạo bảng rate_res
CREATE TABLE rate_res(
	user_id INT,
	res_id INT,
	amount INT,
	date_rate DATETIME,
	
	FOREIGN KEY (user_id) REFERENCES users(user_id),
	FOREIGN KEY (res_id) REFERENCES restaurant(res_id)
);

INSERT INTO rate_res (user_id, res_id, amount, date_rate) VALUES
(1, 4, 4, '2023-11-09 10:15:00'),
(2, 1, 5, '2023-11-07 11:30:00'),
(3, 4, 4, '2023-11-09 10:15:00'),
(4, 5, 3, '2023-11-09 11:30:00'),
(5, 3, 5, '2023-11-08 10:15:00'),
(6, 2, 4, '2023-11-09 13:15:00'),
(10, 2, 3, '2023-11-09 16:15:00');

-- tạo bảng like_res
CREATE TABLE like_res(
	user_id INT,
	res_id INT,
	date_like DATETIME,
	
	FOREIGN KEY (user_id) REFERENCES users(user_id),
	FOREIGN KEY (res_id) REFERENCES restaurant(res_id)
);

INSERT INTO like_res (user_id, res_id, date_like) VALUES
(1, 1, '2023-11-07 08:30:00'),
(1, 2, '2023-11-07 09:45:00'),
(1, 3, '2023-11-08 10:15:00'),
(1, 4, '2023-11-09 10:15:00'),
(2, 1, '2023-11-07 11:30:00'),
(2, 3, '2023-11-08 11:30:00'),
(3, 1, '2023-11-07 08:30:00'),
(3, 2, '2023-11-07 09:45:00'),
(3, 3, '2023-11-08 10:15:00'),
(3, 4, '2023-11-09 10:15:00'),
(3, 5, '2023-11-09 11:30:00'),
(4, 4, '2023-11-09 10:15:00'),
(4, 5, '2023-11-09 11:30:00'),
(5, 1, '2023-11-07 08:30:00'),
(5, 3, '2023-11-08 10:15:00'),
(5, 4, '2023-11-09 10:15:00'),
(5, 5, '2023-11-09 12:45:00'),
(6, 2, '2023-11-09 13:15:00'),
(7, 2, '2023-11-07 14:30:00'),
(7, 3, '2023-11-08 14:30:00'),
(7, 5, '2023-11-09 14:30:00'),
(9, 1, '2023-11-07 15:45:00'),
(9, 2, '2023-11-08 15:45:00'),
(9, 3, '2023-11-09 15:45:00'),
(10, 2, '2023-11-09 16:15:00');

-- tạo bảng food
CREATE TABLE food(
	food_id INT PRIMARY KEY AUTO_INCREMENT,
	food_name VARCHAR (255),
	image VARCHAR (255),
	price FLOAT,
	description VARCHAR (255),
	type_id INT,
	
	FOREIGN KEY (type_id) REFERENCES food_type(type_id)
);

INSERT INTO food (food_name, image, price, description, type_id) VALUES
('Bún Mắm', 'bun-mam.jpg', 7.99, 'Bún Mắm thơm ngon', 1),
('Bún Riêu Cua', 'bun-rieu-cua.jpg', 6.49, 'Bún riêu cua đậm đà', 1),
('Bún Chả Hà Nội', 'bun-cha-ha-noi.jpg', 7.49, 'Bún chả Hà Nội truyền thống', 1),
('Bánh Mì Sài Gòn', 'banh-mi-sai-gon.jpg', 4.99, 'Bánh mì Sài Gòn truyền thống', 2),
('Bánh Mì Hamburger', 'hamburger.jpg', 5.49, 'Bánh mì hamburger thơm ngon', 2),
('Cơm Gà Hấp', 'com-ga-hap.jpg', 9.99, 'Cơm gà hấp thơm ngon', 3),
('Cơm Gà Xối Mỡ', 'com-ga-xoi-mo.jpg', 8.99, 'Cơm Gà Xối Mỡ ngon tuyệt', 3),
('Cơm Tấm Sườn Nướng', 'com-tam-suon-nuong.jpg', 8.49, 'Cơm tấm sườn nướng phong cách miền Nam', 3),
('Nước Cam', 'nuoc-cam.jpg', 2.99, 'Nước cam tươi ngon', 4),
('Nước Lọc', 'nuoc-loc.jpg', 1.49, 'Nước lọc tinh khiết', 4);

-- tạo bảng orders
CREATE TABLE orders(
	user_id INT,
	food_id INT,
	amount INT,
	code VARCHAR (255),
	arr_sub_id VARCHAR (255),
	
	FOREIGN KEY (user_id) REFERENCES users(user_id),
	FOREIGN KEY (food_id) REFERENCES food(food_id)
);

INSERT INTO orders (user_id, food_id, amount, code, arr_sub_id) VALUES
(1, 2, 3, 'ORDER001', 'SUBORDER001'),
(2, 1, 2, 'ORDER002', 'SUBORDER002'),
(3, 3, 1, 'ORDER003', 'SUBORDER003'),
(4, 2, 4, 'ORDER004', 'SUBORDER004'),
(5, 1, 2, 'ORDER005', 'SUBORDER005'),
(6, 3, 3, 'ORDER006', 'SUBORDER006'),
(7, 1, 1, 'ORDER007', 'SUBORDER007'),
(9, 2, 2, 'ORDER008', 'SUBORDER008'),
(10, 3, 4, 'ORDER009', 'SUBORDER009'),
(7, 2, 3, 'ORDER010', 'SUBORDER010');

-- tạo bảng sub_food
CREATE TABLE sub_food(
	sub_id INT PRIMARY KEY AUTO_INCREMENT,
	sub_name VARCHAR (255),
	sub_price FLOAT,
	food_id INT,
	
	FOREIGN KEY (food_id) REFERENCES food(food_id)
);

INSERT INTO sub_food (sub_name, sub_price, food_id) VALUES
('Thêm trứng', 1.99, 5),
('Thêm thịt', 2.99, 5),
('Thêm phô mai', 1.99, 5),
('Canh Gà Lá Vang', 5.99, 6),
('Canh Chua', 4.49, 8),
('Canh Rau Củ', 5.49, 8),
('Bánh Mì Gà Xối Mỡ', 3.99, 4);

-- Tìm 5 người đã like nhà hàng nhiều nhất

SELECT users.*, COUNT(like_res.user_id) AS like_count
FROM like_res JOIN users ON like_res.user_id = users.user_id
GROUP BY like_res.user_id
ORDER BY like_count DESC
LIMIT 5;

-- Tìm 2 nhà hàng có lượt like nhiều nhất

SELECT restaurant.*, COUNT(like_res.res_id) AS like_count
FROM like_res JOIN restaurant ON like_res.res_id = restaurant.res_id
GROUP BY like_res.res_id
ORDER BY like_count DESC
LIMIT 2;

-- Tìm người đã đặt hàng nhiều nhất

SELECT users.*, COUNT(orders.user_id) AS order_count
FROM orders JOIN users ON orders.user_id = users.user_id
GROUP BY orders.user_id
ORDER BY order_count DESC
LIMIT 1;

-- Tìm người dùng không hoạt động trong hệ thống

SELECT *
FROM users
WHERE NOT EXISTS (
	SELECT *
	FROM like_res, rate_res, orders
	WHERE (users.user_id = like_res.user_id OR users.user_id = rate_res.user_id OR users.user_id = orders.user_id)
);